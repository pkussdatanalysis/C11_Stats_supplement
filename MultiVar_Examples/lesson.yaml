- Class: meta
  Course: C11_Stats_supplement
  Lesson: MultiVar_Examples
  Author: mzl
  Type: Standard
  Organization: pkuss
  Version: 2.4.3

- Class: text
  Output: 在本课中，我们将看一些具有多个变量的回归模型的例子。我们将从瑞士数据开始，我们已经为你加载。这些数据是R datasets包的一部分。
    它是在1888年收集的，是瑞士一个人口变化的时期，在瑞士的47个法语省份测量了六个数量。这里显示变量之间的配对关系的6乘6的散点图阵列。
    除fertility(生育)外，所有的变量都是人口的比例。例如，Examination(考试)表示在军队考试中获得最高分数的学员比例，
    而"Education(教育)是指在小学以外受过教育的学员比例。

- Class: mult_question  
  Output: 从图中，哪一个不是被测量的因子之一？
  AnswerChoices: Obesity; Catholic; Fertility; Infant Mortality
  CorrectAnswer: Obesity
  AnswerTests: omnitest(correctVal='Obesity')
  Hint: 哪个选择没有出现在图形上？

- Class: cmd_question
  Output: 首先使用R函数lm生成线性模型“all”，其中Fertility是依赖于所有其他变量的。使用R简写"."代表在传递给lm的公式中的五个自变量。
    记住数据是"swiss"。
  CorrectAnswer: all <- lm(Fertility ~ .,data=swiss)
  AnswerTests: creates_lm_model('all <- lm(Fertility ~ . ,data=swiss)')
  Hint: 在R提示符下输入"all <- lm（Fertility~.,data=swiss）"。

- Class: cmd_question
  Output: 现在用summary看一下线性模型的摘要。
  CorrectAnswer: summary(all)
  AnswerTests: omnitest(correctExpr='summary(all)')
  Hint: 在R提示符处输入"summary（all）"。

- Class: text
  Output: 回想一下，Estimates是线性模型的自变量的系数（所有这些都是百分比），它们反映了当相应的自变量变化时，因变量（生育率Fertility）的估计变化。
    所以，农业(agriculture)从事农业的男性比例每增加1％，我们预计生育率(Fertility)会下降17％，其他所有变量保持不变;天主教徒(Catholicism)每增加1％，
    我们预计生育率会上升10％，其他变量保持不变。

- Class: mult_question
  Output: 行最末尾的“*”表示农业对生育率的影响是显着的。农业的t检验在什么α水平上显着？
  AnswerChoices: 0.05; 0.01; 0.1; R doesn't say
  CorrectAnswer: 0.05
  AnswerTests: omnitest(correctVal='0.05')
  Hint: 查看summary输出中的"Signif. codes"行。

- Class: cmd_question
  Output: 现在生成另一个线性模型（不存储在一个新变量中）的摘要summary，其中Fertility只取决于Agriculture。
  CorrectAnswer: summary(lm(Fertility ~ Agriculture, swiss))
  AnswerTests: omnitest(correctExpr='summary(lm(Fertility ~ Agriculture, swiss))')
  Hint: 在R提示符处输入summary(lm(Fertility ~ Agriculture, swiss))。

- Class: mult_question
  Output: 这个新模型的农业(Agriculture)系数是多少？
  AnswerChoices: 0.19420; 60.30438; 0.07671; *
  CorrectAnswer: 0.19420
  AnswerTests: omnitest(correctVal='0.19420')
  Hint: 查看刚刚生成的摘要数据的"Estimate" 列and "Agriculture"行。

- Class: text  
  Output: 有趣的一点是，农业(Agriculture)系数的符号从负（当所有变量包含在模型中）变为正（当模型只考虑农业(Agriculture)时）。
    其他因素显然影响农业对生育的影响。

- Class: mult_question
  Output: 我们来考虑一些因素之间的关系。你认为等级教育和考试成绩相关？
  AnswerChoices: They would be correlated;  They would be uncorrelated; I would not be able to guess without more information
  CorrectAnswer: They would be correlated
  AnswerTests: omnitest(correctVal='They would be correlated')
  Hint: 根据常识来作答吧

- Class: cmd_question
  Output: 现在用R函数“cor”检查你的直觉。这计算了考试和教育之间的关系。
  CorrectAnswer: cor(swiss$Examination,swiss$Education)
  AnswerTests: ANY_of_exprs('cor(swiss$Examination,swiss$Education)','cor(swiss$Education,swiss$Examination)')
  Hint: 在R提示符处输入cor(swiss$Examination,swiss$Education)。

- Class: cmd_question
  Output: 0.6984的相关性表明两者是相关的。现在找到农业Agriculture和教育Education关系。
  CorrectAnswer: cor(swiss$Agriculture,swiss$Education)
  AnswerTests: ANY_of_exprs('cor(swiss$Agriculture,swiss$Education)','cor(swiss$Education,swiss$Agriculture)')
  Hint: 在R提示符处输入cor(swiss$Agriculture,swiss$Education)。

- Class: text  
  Output: 农业Agriculture和教育Education之间的负相关（-.6395）可能会影响农业对生育的影响。我已经加载了swissLMs.R在您的工作目录。
    这里有一个函数makelms（），它可以产生5个线性模型的序列。每个模型都有一个比前一个模型多一个自变量，所以第一个只有一个自变量Agriculture，
    最后一个有全部的5个自变量.已经你的编辑器中加载源代码。如果没有打开，手动打开文件，所以你可以看看代码。

- Class: cmd_question  
  Output: 现在运行函数makelms（）以查看变量的添加如何影响模型中农业的系数。
  CorrectAnswer: makelms()
  AnswerTests: omnitest(correctExpr='makelms()')
  Hint: 在R提示符处输入“makelms（）”。

- Class: mult_question
  Output: 增加哪个变量将农业系数的符号从正变为负？
  AnswerChoices: Education; Catholic; Examination; Infant.Mortality
  CorrectAnswer: Education
  AnswerTests: omnitest(correctVal='Education')
  Hint: 符号随着第三个模型而改变。从R代码来看，出现在第三个调用，但不在第二中自变量是哪个？

- Class: cmd_question  
  Output: 现在我们将显示当我们添加一个变量时，会发生什么。这个变量不会向模型提供新的线性信息。创建一个变量ec，
    即swiss$Examination 和 swiss$Catholic的总和。
  CorrectAnswer: ec <- swiss$Examination+swiss$Catholic
  AnswerTests: ANY_of_exprs('ec <- swiss$Examination+swiss$Catholic','ec <- swiss$Catholic+swiss$Examination')
  Hint: 在R提示符处输入c <- swiss$Examination+swiss$Catholic。

- Class: cmd_question  
  Output: 现在生成一个新的模型efit，Fertility(生育)作为因变量和剩余的5个原始变量和ec作为自变量。在公式的右边使用R简写“.+ ec”。
  CorrectAnswer: efit <- lm(Fertility ~ . + ec, swiss)
  AnswerTests: creates_lm_model('efit <- lm(Fertility ~ . + ec, swiss)')
  Hint: 在R提示符处输入“efit < - lm（Fertility~.+ ec，swiss）”。

- Class: text  
  Output: 我们将看到R忽略这个新的变量，因为它不会向模型添加任何信息。

- Class: cmd_question  
  Output: 从创建的第一个模型all的所有的系数中减去efit系数。
  CorrectAnswer: all$coefficients - efit$coefficients
  AnswerTests: omnitest(correctExpr='all$coefficients - efit$coefficients')
  Hint: 在R提示符处输入all$coefficients - efit$coefficients。

- Class: mult_question  
  Output:  ec的系数是多少
  AnswerChoices: NA; 0; I haven't a clue.
  CorrectAnswer: NA
  AnswerTests: omnitest(correctVal='NA')
  Hint: 因为ec是两个变量的线性组合，所以R忽略它，所以它的系数是不可用的。

- Class: mult_question  
  Output:  这告诉我们
  AnswerChoices: Adding ec doesn't change the model; Adding ec zeroes out the coefficients; R is really cool 
  CorrectAnswer: Adding ec doesn't change the model
  AnswerTests: omnitest(correctVal='Adding ec doesn\'t change the model')
  Hint: 因为ec是两个其他变量的线性组合，所以它不会改变模型。
  
- Class: mult_question
  Output: 确定将这次练习的结果提交吗?
  CorrectAnswer: NULL
  AnswerChoices: Yes;No
  AnswerTests: post_on_demand()
  Hint: ""
  
- Class: text
  Output: 祝贺！ 你已经完成了多变量线性模型的第一课。
